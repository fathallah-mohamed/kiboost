import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { useNavigate } from 'react-router-dom';
import { BackToDashboard } from '../BackToDashboard';
import { StepNavigation } from '../navigation/StepNavigation';
import { PlannerCalendar } from './PlannerCalendar';
import { PlannerRecipes } from './PlannerRecipes';
import { MultiChildSelector } from '../recipe/MultiChildSelector';
import { ChildProfile } from '../types';
import { useMealPlanner } from '../meal-planner/hooks/useMealPlanner';

interface PlannerPageProps {
  userId: string;
  onSectionChange?: (section: string) => void;
}

export const PlannerPage = ({ userId, onSectionChange }: PlannerPageProps) => {
  const [selectedChildren, setSelectedChildren] = useState<ChildProfile[]>([]);
  const navigate = useNavigate();
  
  const {
    selectedDate,
    setSelectedDate,
    recipes,
    plannedRecipes,
    loading,
    planningRecipe,
    planRecipe,
    removeRecipe,
    viewMode,
    setViewMode,
    isAutoGenerated
  } = useMealPlanner(userId, selectedChildren);

  const handleRemoveRecipe = async (date: string, childId: string) => {
    await removeRecipe(date, childId);
  };

  return (
    <div className="space-y-6">
      <BackToDashboard onBack={() => onSectionChange?.('overview')} />
      
      <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
        <h2 className="text-2xl font-bold">Planificateur de repas</h2>
      </div>

      <Card className="p-4">
        <MultiChildSelector 
          onSelectChildren={setSelectedChildren}
          selectedChildren={selectedChildren}
        />
      </Card>
      
      <div className="grid grid-cols-1 gap-6">
        <PlannerCalendar
          selectedDate={selectedDate}
          setSelectedDate={setSelectedDate}
          plannedRecipes={plannedRecipes}
          viewMode={viewMode}
          setViewMode={setViewMode}
          selectedChildren={selectedChildren}
          onRemoveRecipe={handleRemoveRecipe}
          isAutoGenerated={isAutoGenerated}
        />

        <PlannerRecipes
          recipes={recipes}
          loading={loading}
          planningRecipe={planningRecipe}
          onPlanRecipe={(recipe) => planRecipe(recipe, selectedChildren)}
        />

        <StepNavigation
          previousStep={{
            label: "Retour aux recettes",
            route: "/dashboard/generate-recipes"
          }}
          nextStep={{
            label: "Liste de courses",
            route: "/dashboard/shopping"
          }}
        />
      </div>
    </div>
  );
};